
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por la herramienta Generador de clases SQL.
//     Versión de runtime:4.0.30319.34209
//
//     Desarrollado por Ismael Almaraz Armeaga
//     ismaelalmaraz@live.com.mx
// </auto-generated>
//------------------------------------------------------------------------------
                            
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Data.Common;
using AccesoDatos;
namespace Modelo
{
	public class VENTA
	{
		Int32		ID_VENTA;
		Int32		CVE_CTE;
		DateTime	FECHA;
		Double		SUBTOTAL;
		Double		IVA;
		Double		DESCUENTO;
		Double		TOTAL;
        String      TIPO;
        String      FORMA_PAGO;
        String      CONDICIONES_PAGO;
        String      METODO_PAGO;
        String      CADENA_ORIGINAL;
        String      UUID;
        String      SATSEAL;
        String      CERTIFICADO_SAT;
        String      FEC_CERTIFICACION;
        decimal     TIPO_CAMBIO;
        string      RECEPTOR;
        string      selloCFDI;
        string      noCertificado;
        string      CANCELACION;

        string      SERIE;
        string      FOLIO;
        string      NOMBRERECEPTOR;
        string      USOCFDI;
        string      XML;

        public String xml
        {
            get { return this.XML; }
            set { this.XML = value; }
        }


        public String usocfdi
        {
            get { return this.USOCFDI; }
            set { this.USOCFDI = value; }
        }

        public String nombreReceptor 
        {
            get { return this.NOMBRERECEPTOR; }
            set { this.NOMBRERECEPTOR = value; }
        }

        public String folio 
        {
            get { return this.FOLIO; }
            set { this.FOLIO = value; }
        }

        public String serie
        {
            get { return this.SERIE; }
            set { this.SERIE = value; }
        }

        public String SELLOCFDI
        {
            get { return this.selloCFDI; }
            set { this.selloCFDI = value; }
        }
        public String NOCERTIFICADO
        {
            get { return this.noCertificado; }
            set { this.noCertificado = value; }
        }

        public decimal tipo_cambio
        {
            get { return this.TIPO_CAMBIO; }
            set { this.TIPO_CAMBIO = value; }
        }

        public String receptor
        {
            get { return this.RECEPTOR; }
            set { this.RECEPTOR = value; }
        }

        public String cadena_original
        {
            get { return this.CADENA_ORIGINAL; }
            set { this.CADENA_ORIGINAL = value; }
        }

        public String uuid
        {
            get { return this.UUID; }
            set { this.UUID = value; }
        }

        public String sat_seal
        {
            get { return this.SATSEAL; }
            set { this.SATSEAL = value; }
        }

        public String certificado_sat
        {
            get { return this.CERTIFICADO_SAT; }
            set { this.CERTIFICADO_SAT = value; }
        }


        public String fecha_certificacion
        {
            get { return this.FEC_CERTIFICACION; }
            set { this.FEC_CERTIFICACION = value; }
        }

        public String forma_pago
        {
            get { return this.FORMA_PAGO; }
            set { this.FORMA_PAGO = value; }
        }

        public String condiciones_pago
        {
            get { return this.CONDICIONES_PAGO; }
            set { this.CONDICIONES_PAGO = value; }
        }

        public String cancelacion
        {
            get { return this.CANCELACION; }
            set { this.CANCELACION = value; }
        }

        public String metodo_pago
        {
            get { return this.METODO_PAGO; }
            set { this.METODO_PAGO = value; }
        }

        public String tipo
        {
            get { return this.TIPO; }
            set { this.TIPO = value; }
        }

		public Int32 id_venta
		{
			get { return this.ID_VENTA; }
			set { this.ID_VENTA = value;}
		}

		public Int32 cve_cte
		{
			get { return this.CVE_CTE; }
			set { this.CVE_CTE = value;}
		}

		public DateTime fecha
		{
			get { return this.FECHA; }
			set { this.FECHA = value;}
		}

		public Double subtotal
		{
			get { return this.SUBTOTAL; }
			set { this.SUBTOTAL = value;}
		}

		public Double iva
		{
			get { return this.IVA; }
			set { this.IVA = value;}
		}

		public Double descuento
		{
			get { return this.DESCUENTO; }
			set { this.DESCUENTO = value;}
		}

		public Double total
		{
			get { return this.TOTAL; }
			set { this.TOTAL = value;}
		}
	}

	public static class metodos_VENTA
	{

        public static void guardarTimbre(Comprobante oComprobante, string sello, Int64 cartaPorte, string fechaCertificacion, string certificadoSAT, string satSeal, string UUID, string XML, String noCertificado, String selloCFDI, string usoCFDI)
        {
            try
            {


            String Qry = @"INSERT INTO venta(id_venta,cve_cte,fecha,subtotal,iva,descuento,total,tipo, metodo_pago, condiciones_pago, forma_pago,receptor,serie,folio,tipoCambio,comentario,
fechaCertificacion, certificadoSAT, satSeal, UUID, xml, noCertificado, selloCFDI, usoCFDI, cadenaOriginal)
values(@id_venta,@cve_cte,@fecha,@subtotal,@iva,@descuento,@total,@tipo, @metodo_pago, @condiciones_pago, @foma_pago, @receptor,@serie,@folio,@tipoCambio,@comentario,
@fechaCertificacion,@certificadoSAT,@satSeal,@UUID,@xml,@noCertificado,@selloCFDI,@usoCFDI,@cadenaOriginal)";
            BaseDatos d = new BaseDatos();
            d.Conectar();
            d.CrearComando(Qry);
            d.AsignarParametroEntero("@id_venta", 0);
            d.AsignarParametroEntero("@cve_cte", 0);
            d.AsignarParametroCadena("@fecha", oComprobante.Fecha.ToString("yyyy-MM-dd HH:mm:ss"));
            d.AsignarParametroDecimal("@subtotal", oComprobante.SubTotal);
            d.AsignarParametroDouble("@iva", 0);
            d.AsignarParametroDouble("@descuento", 0);
            d.AsignarParametroDecimal("@total", oComprobante.Total);
            d.AsignarParametroCadena("@tipo", "PAGO");
            d.AsignarParametroCadena("@receptor", oComprobante.Receptor.Rfc);
            d.AsignarParametroCadena("@metodo_pago", oComprobante.FormaPago);
            d.AsignarParametroCadena("@condiciones_pago", "");
            d.AsignarParametroCadena("@foma_pago", oComprobante.MetodoPago);
            d.AsignarParametroCadena("@comentario", oComprobante.Receptor.Rfc);
            d.AsignarParametroDecimal("@tipoCambio", oComprobante.TipoCambio);

            d.AsignarParametroCadena("@fechaCertificacion", fechaCertificacion);
            d.AsignarParametroCadena("@certificadoSAT", certificadoSAT);
            d.AsignarParametroCadena("@satSeal", satSeal);
            d.AsignarParametroCadena("@UUID", UUID);
            //d.AsignarParametroEntero64("@id", cartaPorte);
            d.AsignarParametroCadena("@xml", XML);
            d.AsignarParametroCadena("@noCertificado", noCertificado);
            d.AsignarParametroCadena("@selloCFDI", selloCFDI);
            d.AsignarParametroCadena("@usoCFDI", oComprobante.Receptor.UsoCFDI);
            d.AsignarParametroCadena("@cadenaOriginal", "||version 1.0|" + UUID + "|" + fechaCertificacion + "|" + satSeal + "|" + certificadoSAT + "||");

            d.AsignarParametroCadena("@serie", oComprobante.Serie);
            d.AsignarParametroCadena("@folio", oComprobante.Folio);
            d.EjecutarComando();
            d.Desconectar();
            }
            catch(Exception err)
            {

            }

        }

        public static void guardarTimbre(string sello, Int64 cartaPorte, string fechaCertificacion, string certificadoSAT, string satSeal, string UUID, string XML, String noCertificado, String selloCFDI, string usoCFDI)
        {
            string cadena = @"UPDATE venta
            SET fechaCertificacion=@fechaCertificacion, certificadoSAT=@certificadoSAT,satSeal=@satSeal,UUID=@UUID, cadenaOriginal=@cadenaOriginal, xml=@xml,noCertificado=@noCertificado,selloCFDI=@selloCFDI,usoCFDI=@usoCFDI, tipo='FACTURA'
            WHERE id_venta=@id";

            BaseDatos d = new BaseDatos();
            d.Conectar();
            d.CrearComando(cadena);
            d.AsignarParametroCadena("@fechaCertificacion", fechaCertificacion);
            d.AsignarParametroCadena("@certificadoSAT", certificadoSAT);
            d.AsignarParametroCadena("@satSeal", satSeal);
            d.AsignarParametroCadena("@UUID", UUID);
            d.AsignarParametroEntero64("@id", cartaPorte);
            d.AsignarParametroCadena("@xml", XML);
            d.AsignarParametroCadena("@noCertificado", noCertificado);
            d.AsignarParametroCadena("@selloCFDI", selloCFDI);
            d.AsignarParametroCadena("@usoCFDI", usoCFDI);
            d.AsignarParametroCadena("@cadenaOriginal", "||version 1.0|" + UUID + "|" + fechaCertificacion + "|" + satSeal + "|" + certificadoSAT + "||");
            d.EjecutarComando();
            d.Desconectar();

        }

        public static void insertarVENTA(Int32 id_venta, Int32 cve_cte, DateTime fecha, Double subtotal, Double iva, Double descuento, Double total,String tipo,
            string metodo_pago, string condiciones_pago, string foma_pago, string receptor,string serie, string folio, decimal tipoCambio, string comentario)
		{
            String Qry = @"INSERT INTO venta(id_venta,cve_cte,fecha,subtotal,iva,descuento,total,tipo, metodo_pago, condiciones_pago, forma_pago,receptor,serie,folio,tipoCambio,comentario)
values(@id_venta,@cve_cte,@fecha,@subtotal,@iva,@descuento,@total,@tipo, @metodo_pago, @condiciones_pago, @foma_pago, @receptor,@serie,@folio,@tipoCambio,@comentario)";
			BaseDatos d = new BaseDatos();
			d.Conectar();
			d.CrearComando(Qry);
			d.AsignarParametroEntero("@id_venta",id_venta);
			d.AsignarParametroEntero("@cve_cte",cve_cte);
			d.AsignarParametroCadena("@fecha",fecha.ToString("yyyy-MM-dd HH:mm:ss"));
			d.AsignarParametroDouble("@subtotal",subtotal);
			d.AsignarParametroDouble("@iva",iva);
			d.AsignarParametroDouble("@descuento",descuento);
			d.AsignarParametroDouble("@total",total);
            d.AsignarParametroCadena("@tipo", tipo);
            d.AsignarParametroCadena("@receptor", receptor);
            d.AsignarParametroCadena("@metodo_pago", metodo_pago);
            d.AsignarParametroCadena("@condiciones_pago", condiciones_pago);
            d.AsignarParametroCadena("@foma_pago", foma_pago);
            d.AsignarParametroCadena("@comentario", comentario);
            d.AsignarParametroDecimal("@tipoCambio", tipoCambio);

            d.AsignarParametroCadena("@serie", serie);
            d.AsignarParametroCadena("@folio", folio);
            d.EjecutarComando();
            d.Desconectar();

        }

        public static void eliminarVENTA(Int32 id_venta)
        {
            String Qry = "DELETE FROM venta WHERE id_venta=@id_venta";
            BaseDatos d = new BaseDatos();
            d.Conectar();
            d.CrearComando(Qry);
            d.AsignarParametroEntero("@id_venta", id_venta);

            d.EjecutarComando();
            d.Desconectar();
        }

        public static void actualizarVENTA(Int32 id_venta, Int32 cve_cte, DateTime fecha, Double subtotal, Double iva, Double descuento, Double total, String tipo)
		{
            String Qry = "UPDATE venta SET id_venta = @id_venta, cve_Cte = @cve_Cte, fecha = @fecha, subtotal = @subtotal, iva = @iva, descuento = @descuento, total = @total, tipo=@tipo WHERE ID=@ID";
			BaseDatos d = new BaseDatos();
			d.Conectar();
			d.CrearComando(Qry);
			d.AsignarParametroEntero("@id_venta",id_venta);
			d.AsignarParametroEntero("@cve_cte",cve_cte);
			d.AsignarParametroFecha("@fecha",fecha);
			d.AsignarParametroDouble("@subtotal",subtotal);
			d.AsignarParametroDouble("@iva",iva);
			d.AsignarParametroDouble("@descuento",descuento);
			d.AsignarParametroDouble("@total",total);
            d.AsignarParametroCadena("@tipo", tipo);
			d.EjecutarComando();
            d.Desconectar();
        }

        public static void cancelarFacturaVENTA(string uuid, string xml)
        {
            String Qry = "UPDATE venta SET folioCancelacion = @xml WHERE UUID=@uuid";
            BaseDatos d = new BaseDatos();
            d.Conectar();
            d.CrearComando(Qry);
            d.AsignarParametroCadena("@uuid", uuid);
            d.AsignarParametroCadena("@xml", xml.Replace("'","@"));

            d.EjecutarComando();
            d.Desconectar();
        }

        public static Int32 ultimoIdVenta()
        {
            Int32 id = 0;
            String Qry = @"SELECT MAX(id_venta) AS id FROM venta";
            BaseDatos d = new BaseDatos();
            d.Conectar();
            d.CrearComando(Qry);
            DbDataReader datosItems = d.EjecutarConsulta();
            while (datosItems.Read())
            {
                id = Convert.ToInt32(datosItems["id"].ToString());
            }
            datosItems.Close();
            d.Desconectar();

            return id;
        }

        public static List<VENTA> obtenerCotizaciones(Int32 cliente)
        {
            List<VENTA> listVENTA = new List<VENTA>();
            String Qry = @"SELECT id_venta, cve_Cte, fecha, subtotal, iva, descuento, total  FROM venta WHERE cve_Cte=@ID and tipo='PRESUPUESTO'";
            BaseDatos d = new BaseDatos();
            d.Conectar();
            d.CrearComando(Qry);
            d.AsignarParametroEntero("@ID", cliente);
            DbDataReader datosItems = d.EjecutarConsulta();
            while (datosItems.Read())
            {
                VENTA objVENTA = new VENTA();
                objVENTA.id_venta = Convert.ToInt32(datosItems["id_venta"].ToString());
                objVENTA.cve_cte = Convert.ToInt32(datosItems["cve_cte"].ToString());
                objVENTA.fecha = Convert.ToDateTime(datosItems["fecha"].ToString());
                objVENTA.subtotal = Convert.ToDouble(datosItems["subtotal"].ToString());
                objVENTA.iva = Convert.ToDouble(datosItems["iva"].ToString());
                objVENTA.descuento = Convert.ToDouble(datosItems["descuento"].ToString());
                objVENTA.total = Convert.ToDouble(datosItems["total"].ToString());
                listVENTA.Add(objVENTA);
            }
            datosItems.Close();
            d.Desconectar();
            return listVENTA;
        }

        public static List<VENTA> seleccionarVENTA(DateTime inicio, DateTime fin, String rfc)
        {
            String Qry = "";
            List<VENTA> listVENTA = new List<VENTA>();
            BaseDatos d = new BaseDatos();
            d.Conectar();
            if (rfc == "")
            {
                Qry = @"
                SELECT id_venta,serie,folio, cve_Cte, fecha, subtotal, iva, descuento, total,tipo,receptor,uuid,folioCancelacion FROM venta 
                WHERE tipo<>'PRESUPUESTO' and  uuid is not null  AND `fecha` 
                BETWEEN @desde and @hasta
                union
                SELECT id_venta, serie,folio, cve_Cte, fecha, subtotal, iva, descuento, total,tipo,receptor,uuid,folioCancelacion FROM venta
                WHERE   uuid is null AND `fecha` ";//  
                d.CrearComando(Qry);
            }
            else
            {
                Qry = @"SELECT id_venta,serie,folio, cve_Cte, fecha, subtotal, iva, descuento, total,tipo,receptor,uuid,folioCancelacion FROM venta WHERE tipo<>'PRESUPUESTO' and  uuid is not null AND `fecha` 
                BETWEEN @desde and @hasta and receptor like @rfc
                union
                SELECT id_venta,serie,folio,  cve_Cte, fecha, subtotal, iva, descuento, total,tipo,receptor,uuid,folioCancelacion FROM venta
                WHERE   uuid is null  AND `fecha` ";
                d.CrearComando(Qry);
                d.AsignarParametroCadena("@rfc", "%" + rfc + "%");
            }


            d.AsignarParametroCadena("@desde", inicio.ToString("yyyy-MM-dd"));
            d.AsignarParametroCadena("@hasta", fin.ToString("yyyy-MM-dd"));
            DbDataReader datosItems = d.EjecutarConsulta();

            while (datosItems.Read())
            {
                VENTA objVENTA = new VENTA();
                objVENTA.receptor = datosItems["receptor"].ToString();
                objVENTA.id_venta = Convert.ToInt32(datosItems["id_venta"].ToString());
                objVENTA.serie = datosItems["serie"].ToString(); ;
                objVENTA.folio= datosItems["folio"].ToString();
                objVENTA.cve_cte = Convert.ToInt32(datosItems["cve_cte"].ToString());
                objVENTA.fecha = Convert.ToDateTime(datosItems["fecha"].ToString());
                objVENTA.subtotal = Convert.ToDouble(datosItems["subtotal"].ToString());
                objVENTA.iva = Convert.ToDouble(datosItems["iva"].ToString());
                objVENTA.descuento = Convert.ToDouble(datosItems["descuento"].ToString());
                objVENTA.total = Convert.ToDouble(datosItems["total"].ToString());
                objVENTA.tipo = datosItems["tipo"].ToString();
                objVENTA.uuid = datosItems["uuid"].ToString();
                objVENTA.cancelacion = datosItems["folioCancelacion"].ToString();
                listVENTA.Add(objVENTA);
            }
            datosItems.Close();
            d.Desconectar();
            return listVENTA;
        }

        public  static VENTA  seleccionarVENTA(string ID)
		{
            VENTA objVENTA = new VENTA();
            String Qry = @"SELECT * FROM venta,clientes WHERE venta.receptor=clientes.rfc and id_venta=@ID";
			BaseDatos d = new BaseDatos();
			d.Conectar();
			d.CrearComando(Qry);
            d.AsignarParametroCadena("@ID", ID);
			DbDataReader datosItems = d.EjecutarConsulta();
			while(datosItems.Read())
			{   
                objVENTA.receptor = datosItems["receptor"].ToString();
                objVENTA.id_venta = Convert.ToInt32(datosItems["id_venta"].ToString());
				objVENTA.cve_cte = Convert.ToInt32(datosItems["cve_cte"].ToString());
				objVENTA.fecha = Convert.ToDateTime(datosItems["fecha"].ToString());
				objVENTA.subtotal = Convert.ToDouble(datosItems["subtotal"].ToString());
				objVENTA.iva = Convert.ToDouble(datosItems["iva"].ToString());
				objVENTA.descuento = Convert.ToDouble(datosItems["descuento"].ToString());
				objVENTA.total = Convert.ToDouble(datosItems["total"].ToString());
                objVENTA.tipo = datosItems["tipo"].ToString();
                objVENTA.serie = datosItems["serie"].ToString();
                objVENTA.folio = datosItems["folio"].ToString();
                objVENTA.nombreReceptor = datosItems["tipo"].ToString();
                objVENTA.usocfdi = datosItems["usoCFDI"].ToString().Split('-')[0];
                objVENTA.metodo_pago = datosItems["metodo_pago"].ToString();
                objVENTA.forma_pago =datosItems["forma_pago"].ToString();
                objVENTA.nombreReceptor = datosItems["nombre"].ToString();
                objVENTA.xml= datosItems["xml"].ToString();
                objVENTA.uuid= datosItems["UUID"].ToString();
            }
            datosItems.Close();
            d.Desconectar();
            return objVENTA; 
		}
    }
}